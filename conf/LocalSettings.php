<?php
# This file was automatically generated by the MediaWiki 1.32.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
  exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "__WIKI_NAME__";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "__PATH__";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://__DOMAIN__";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "__ADMIN__@__DOMAIN__";
$wgPasswordSender = "__ADMIN__@__DOMAIN__";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "";
$wgDBname = "__DB_NAME__";
$wgDBuser = "__DB_USER__";
$wgDBpassword = "__DB_PWD__";

# MySQL specific settings
$wgDBprefix = "mdk_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = false;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "__LANGUAGE__";

$wgSecretKey = "__SECRET__";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "5f274549882531d1";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# End of automatically generated settings.
# Add more configuration options below.

# Plugins

# LDAPProvider
# https://www.mediawiki.org/wiki/Extension:LDAPProvider
wfLoadExtension( 'LDAPProvider' );

# PluggableAuth
# https://www.mediawiki.org/wiki/Extension:PluggableAuth
wfLoadExtension( 'PluggableAuth' );

$wgPluggableAuth_EnableLocalLogin = true;
$wgPluggableAuth_EnableLocalProperties = true;

# LDAPAuthentication2
# https://www.mediawiki.org/wiki/Extension:LDAPAuthentication2
wfLoadExtension( 'LDAPAuthentication2' );

# Note(decentral1se): leaving here in case we need them one day
# LDAPGroups
# https://www.mediawiki.org/wiki/Extension:LDAPGroups
# wfLoadExtension( 'LDAPGroups' );

# Note(decentral1se): leaving here in case we need them one day
# LDAPUserInfo
# https://www.mediawiki.org/wiki/Extension:LDAPUserInfo
# wfLoadExtension( 'LDAPUserInfo' );

# Note(decentral1se): leaving here in case we need them one day
# LDAPAuthorization
# https://www.mediawiki.org/wiki/Extension:LDAPAuthorization
# wfLoadExtension( 'LDAPAuthorization' );

# LDAP configuration
$LDAPProviderDomainConfigProvider = function() {
  $config = [
    "LDAP" => [
      "connection" => [
        "server" => "localhost",
        "port" => "389",
        "user" => "uid=__LDAP_USER__,ou=users,dc=yunohost,dc=org",
        "pass" => "__LDAP_PASSWORD__",
        "basedn" => "dc=yunohost,dc=org",
        "groupbasedn" => "dc=yunohost,dc=org",
        "userbasedn" => "dc=yunohost,dc=org",
        "searchattribute" => "uid",
        "usernameattribute" => "uid",
        "realnameattribute" => "cn",
        "emailattribute" => "mail"
      ]
    ]
  ];

  return new \MediaWiki\Extension\LDAPProvider\DomainConfigProvider\InlinePHPArray( $config );
};
