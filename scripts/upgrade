#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin=$(ynh_app_setting_get $app admin)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)
language=$(ynh_app_setting_get $app language)
db_name=$(ynh_app_setting_get $app db_name)
db_pwd=$(ynh_app_setting_get $app mysqlpwd)
ldap_user=$(ynh_app_setting_get --app=$app --key=ldap_user)
ldap_password=$(ynh_app_setting_get --app=$app --key=ldap_password)

# Note(decentral1se): avoid using this on upgrade for the versions
# of the application that upgrade and have not stored this in their
# settings (when it was not available to them). Later on, when we have
# moved a few versions on, we can re-enable this
# wiki_name=$(ynh_app_setting_get --app=$app --key=wiki_name)

#=================================================
# ENSURE BACKWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring backward compatibility..." --weight=1

if [ "$is_public" = "Yes" ]; then
  ynh_app_setting_set $app is_public 1
  is_public=1
elif [ "$is_public" = "No" ]; then
  ynh_app_setting_set $app is_public 0
  is_public=0
fi

if [ -z $db_name ]; then
  db_name=$(ynh_sanitize_dbid $app)
  ynh_app_setting_set $app db_name $db_name
fi

if [ -z $final_path ]; then
  final_path=/var/www/$app
  ynh_app_setting_set $app final_path $final_path
fi

if [[ -z "$ldap_user" ]]; then
  ldap_user="${app}_ldap"
  ldap_password=$(ynh_string_random --length=8)
  ynh_app_setting_set --app="$app" --key=ldap_user --value="$ldap_user"
  ynh_app_setting_set --app="$app" --key=ldap_password --value="$ldap_password"
  yunohost user create $ldap_user --firstname "MediaWikiLdap" --lastname "MediaWikiLdap" --mail ${ldap_user}@$domain --password $ldap_password -q 0
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=100

ynh_backup_before_upgrade

ynh_clean_setup () {
  ynh_restore_upgradebackup
}

ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================
path_url=$(ynh_normalize_url_path $path_url)

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..." --weight=5

ynh_setup_source --dest_dir="$final_path"
ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="ldap_provider"
ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="pluggable_auth"
ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="ldap_authentication2"

# Note(decentral1se): Disabled and unused for now ...
# ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="ldap_groups"
# ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="ldap_userinfo"
# ynh_setup_source --dest_dir="$final_path/extensions/" --source_id="ldap_authorization"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading nginx web server configuration..." --weight=1

ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=3

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

ynh_system_user_create $app

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_backup_if_checksum_is_different --file="$final_path/CONFIG_FILE"

#=================================================
# REPLACE CONFIGURATION SETTINGS
#=================================================
rm $final_path/LocalSettings.php
cp ../conf/LocalSettings.php $final_path/LocalSettings.php

# Note(decentral1se): See note around line 24 about the usage of $wiki_name
ynh_replace_string "__WIKI_NAME__" "YunoWiki" "$final_path/LocalSettings.php"

ynh_replace_string "__ADMIN__" "$admin" "$final_path/LocalSettings.php"

if [ $path_url = "/" ]; then
    # MediaWiki expects a "" for the root URL which is typically assumed to be
    # "/" by other application packages. Therefore, we assume end-users will do
    # this as well and make sure to ensure an "" in all cases where "/" is
    # specified
    ynh_replace_string "__PATH__" "" "$final_path/LocalSettings.php"
else
    ynh_replace_string "__PATH__" "$path_url" "$final_path/LocalSettings.php"
fi

ynh_replace_string "__DOMAIN__" "$domain" "$final_path/LocalSettings.php"
ynh_replace_string "__DB_NAME__" "$db_name" "$final_path/LocalSettings.php"
ynh_replace_string "__DB_USER__" "$db_name" "$final_path/LocalSettings.php"
ynh_replace_string "__DB_PWD__" "$db_pwd" "$final_path/LocalSettings.php"
ynh_replace_string "__LANGUAGE__" "$language" "$final_path/LocalSettings.php"

secret=$(ynh_string_random 64)
ynh_app_setting_set $app secret $secret
ynh_replace_string "__SECRET__" "$secret" "$final_path/LocalSettings.php"

ynh_replace_string "__LDAP_USER__" "$ldap_user" "$final_path/LocalSettings.php"
ynh_replace_string "__LDAP_PASSWORD__" "$ldap_password" "$final_path/LocalSettings.php"

php $final_path/maintenance/update.php

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
chown -R $app:$app $final_path

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading php-fpm configuration..." --weight=2

ynh_add_fpm_config

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=1

if [ $is_public -eq 1 ]
then
  ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
